block head
  title #{title}
  meta(name='description', content='Fancy Text Font Generator. Get your personal stylish Instagram names and stories! Free and no registration required.')
  meta(name="viewport",content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
  link(rel='shortcut icon', href='/favicon.ico')
  meta(name='msapplication-TileColor', content='#FFFFFF')
  meta(name='msapplication-TileImage', content='/favicon-144.png')
  link(rel='canonical', href='https://fancy-text-generator.com')
  meta(name='msapplication-config', content='/browserconfig.xml')
  meta(property='og:title', content='Fancy Text Font Generator')
  meta(property='og:type', content='website')
  meta(property='og:url', content='https://fancy-text-generator.com')
  meta(property='og:image', content='https://fancy-text-generator.com/v1.png')
  meta(property='og:description', content='Fancy Text Font Generator. Get your personal stylish Instagram names and stories! Free and no registration required.')
  script(type='application/ld+json').
    {
      "@context": "https://schema.org/",
      "@type": "WebSite",
      "name": "Fancy Text Font Generator",
      "image": "https://fancy-text-generator/v1.png",
      "description": "Fancy Text Font Generator. Get your personal stylish Instagram names and stories! Free and no registration required.",
      "keywords": "Fancy Text, Fancy Font, Fancy Text Generator, Fancy Text Copy and Paste",
      "genre":"Utility",
      "copyrightYear": "2019",
      "url":"https://fancy-text-generator.com",
      "author": {
        "@type":"WebSite",
        "name":"fancy-text-generator.com"
      },
      "publisher": {
        "@type":"Organization",
        "name":"fancy-text-generator.com",
        "logo":"https://fancy-text-generator.com/v1.png"
      }
    }
  style
    include assets/css/common.css
    include assets/css/home.css

  body
    - var jquery_path = 'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js';
    header
      .header_container.container
        nav(aria-label='Main')
          h1.title
            a(title='Fancy Font Text Generator' href='https://fancy-text-generator.com/') 𝔉𝔞𝔫𝔠𝔶 𝔉𝔬𝔫𝔱 𝔗𝔢𝔵𝔱 𝔊𝔢𝔫𝔢𝔯𝔞𝔱𝔬𝔯
          span.myLogo
            a.myLogo(title='Fancy Font Text Generator' href='https://fancy-text-generator.com/')
              img(src='https://fancy-text-generator.com/favicon-76.png' alt='Fancy Font Text Logo' width='35px' height='35px')
          .icons_wrapper
            a.darkMode(role='button' title='Use light theme' aria-label='Toggle DarkMode')
            button.navbar-toggler.collapsed(type='button' aria-controls='bdNavbar' aria-expanded='false' aria-label='Toggle navigation')
              svg.bi(xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='#fff' viewBox='0 0 16 16')
                path(fill-rule='evenodd' d='M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z')
          #bdNavbar
            ul
              li
                a.darkMode(role='button' title='Use light theme' aria-label='Toggle DarkMode')
              li
                a.underline(href='home.html' aria-current='page') Home
              li
                a.underline(href='patterns.html') Patterns
              li
                a.underline(href='iosEmojis.html') Ios Emojis
              li
                a.underline(href='') Android Emojis
              li
                a.underline(href='unicode.html') Unicode
    .container.container-xxl.wrap
      h2 ᴀᴋᴀ. ɪɴsᴛᴀɢʀᴀᴍ ᴛᴀᴛᴛᴏᴏ ғᴏɴᴛ ɢᴇɴᴇʀᴀᴛᴏʀ
      #input
        textarea#src(placeholder='Type or copy your text here:)' data-gramm_editor='false')
      #copyandpaste
      #out
      section#intro
        h3 How does this work?
        ul
          li
            h4 Copy and Paste
            div
              | Super easy to get fancy text fonts for your Instagram now! It's completely free and no sign-up required.
          li
            h4 Support for all devices
            div
              | 99%
              | of modern devices can display this. Just feel free to show off your
              | fancy fonts to your friends, teachers or even children anywhere! They
              | don't have to install anything before reading your message.
          li
            h4 Fonts for Instagram
            div Generate your personal stylish fancy text fonts for your instagram account.
          li
            h4 More than just text
            div
              | There are two types of fancy text effects: The first one is called Unicode font. It looks like 
              b#u1 𝓽𝓱𝓲𝓼
              | , 
              b#u2 𝓉𝒽𝒾𝓈
              | , and 
              b#u3 𝕥𝕙𝕚𝕤
              | ; The second one is a 
              b
                | mix of
                | ordinary font with some magic unicode font
              | . The magic unicode characters would make the ordinary
              |       character looks like 
              b#w1 t҉h҉i҉s҉
              | , 
              b#w2 t̲h̲i̲s̲
              | , and 
              b#w3 t̪h̪i̪s̪
              | .
    #links
      a(href='https://fancy-text-generator.com/' target='_blank' title='Fancy Font Text Generator')
        | Fancy
        | Font Text Generator
      a(href='https://high-qr-code-generator.com/' target='_blank' title='High Resolution QR Code Generator') QR Code Generator
      a(href='https://www.arealme.com/' target='_blank' title='ARealMe Quizzes') Super cool online quizzes
    script.
      function aloadJS(r, e) {
        var n = document; window;
        !function () { var t = n.createElement("script"); e = e || function () { }, t.onload = e, t.src = r; try { n.head.appendChild(t) } catch (r) { document.documentElement.appendChild(t) } }()
      }

      aloadJS('#{jquery_path}', _m);

      function _m() {
        toggleDarkMode();

        var TEXT_SOURCE = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
        var fonts_arr = [
          //0
          '𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷𝔄𝔅ℭ𝔇𝔈𝔉𝔊ℌℑ𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔ℜ𝔖𝔗𝔘𝔙𝔚𝔛𝔜ℨ',
          //1
          '𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅',
          //2
          '𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩',
          //3
          '𝒶𝒷𝒸𝒹𝑒𝒻𝑔𝒽𝒾𝒿𝓀𝓁𝓂𝓃𝑜𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏𝒜𝐵𝒞𝒟𝐸𝐹𝒢𝐻𝐼𝒥𝒦𝐿𝑀𝒩𝒪𝒫𝒬𝑅𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵',
          //4
          '𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ',
          //5
          'ａｂｃｄｅｆｇｈｉｊｋｌｍｎｏｐｑｒｓｔｕｖｗｘｙｚＡＢＣＤＥＦＧＨＩＪＫＬＭＮＯＰＱＲＳＴＵＶＷＸＹＺ',
          //6
          'ᴀʙᴄᴅᴇғɢʜɪᴊᴋʟᴍɴᴏᴘϙʀsᴛᴜᴠᴡxʏᴢᴀʙᴄᴅᴇғɢʜɪᴊᴋʟᴍɴᴏᴘϙʀsᴛᴜᴠᴡxʏᴢ',
          '𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙',
          '𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡',
          '𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕',
          '𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉',
          'ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏ',
          'Z⅄XMΛ∩⊥SᴚΌԀONW˥⋊ſIH⅁ℲƎᗡƆᙠ∀zʎxʍʌnʇsɹbdouɯlʞɾıɥɓɟǝpɔqɐ',////TODO, Fan!
          'ᵃᵇᶜᵈᵉᶠᵍʰⁱʲᵏˡᵐⁿᵒᵖqʳˢᵗᵘᵛʷˣʸᶻᴬᴮᶜᴰᴱᶠᴳᴴᴵᴶᴷᴸᴹᴺᴼᴾQᴿˢᵀᵁⱽᵂˣʸᶻ',
          'ąҍçժҽƒցհìʝҟӀʍղօքզɾʂէմѵա×վՀȺβ↻ᎠƐƑƓǶįلҠꝈⱮហටφҨའϚͲԱỼచჯӋɀ',
          '🄰🄱🄲🄳🄴🄵🄶🄷🄸🄹🄺🄻🄼🄽🄾🄿🅀🅁🅂🅃🅄🅅🅆🅇🅈🅉🄰🄱🄲🄳🄴🄵🄶🄷🄸🄹🄺🄻🄼🄽🄾🄿🅀🅁🅂🅃🅄🅅🅆🅇🅈🅉',
          'ค๖¢໓ēfງhiวkl๓ຖ໐p๑rŞtนงຟxฯຊค๖¢໓ēfງhiวkl๓ຖ໐p๑rŞtนงຟxฯຊ',
          'ąცƈɖɛʄɠɧıʝƙƖɱŋơ℘զཞʂɬų۷ῳҳყʑąცƈɖɛʄɠɧıʝƙƖɱŋơ℘զཞʂɬų۷ῳҳყʑ',
          '🅰🅱🅲🅳🅴🅵🅶🅷🅸🅹🅺🅻🅼🅽🅾🅿🆀🆁🆂🆃🆄🆅🆆🆇🆈🆉🅰🅱🅲🅳🅴🅵🅶🅷🅸🅹🅺🅻🅼🅽🅾🅿🆀🆁🆂🆃🆄🆅🆆🆇🆈🆉',
          'ค๒ς๔єŦﻮђเןкɭ๓ภ๏קợгรՇยשฬאץչค๒ς๔єŦﻮђเןкɭ๓ภ๏קợгรՇยשฬאץչ',
          'αႦƈԃҽϝɠԋιʝƙʅɱɳσρϙɾʂƚυʋɯxყȥαႦƈԃҽϝɠԋιʝƙʅɱɳσρϙɾʂƚυʋɯxყȥ',
          //822'a̶b̶c̶d̶e̶f̶g̶h̶i̶j̶k̶l̶m̶n̶o̶p̶q̶r̶s̶t̶u̶v̶w̶x̶y̶z̶A̶B̶C̶D̶E̶F̶G̶H̶I̶J̶K̶L̶M̶N̶O̶P̶Q̶R̶S̶T̶U̶V̶W̶X̶Y̶Z̶',
          //823'a̷b̷c̷d̷e̷f̷g̷h̷i̷j̷k̷l̷m̷n̷o̷p̷q̷r̷s̷t̷u̷v̷w̷x̷y̷z̷A̷B̷C̷D̷E̷F̷G̷H̷I̷J̷K̷L̷M̷N̷O̷P̷Q̷R̷S̷T̷U̷V̷W̷X̷Y̷Z̷',
          //818'a̲b̲c̲d̲e̲f̲g̲h̲i̲j̲k̲l̲m̲n̲o̲p̲q̲r̲s̲t̲u̲v̲w̲x̲y̲z̲A̲B̲C̲D̲E̲F̲G̲H̲I̲J̲K̲L̲M̲N̲O̲P̲Q̲R̲S̲T̲U̲V̲W̲X̲Y̲Z̲',
          //819'a̳b̳c̳d̳e̳f̳g̳h̳i̳j̳k̳l̳m̳n̳o̳p̳q̳r̳s̳t̳u̳v̳w̳x̳y̳z̳A̳B̳C̳D̳E̳F̳G̳H̳I̳J̳K̳L̳M̳N̳O̳P̳Q̳R̳S̳T̳U̳V̳W̳X̳Y̳Z̳',
          //822'a̶̢̐͊̿̈͗͠b̴̥̠̩͆͗̂̓́̂c̶̢̢͓̖̻̪̯̠̣͂̆̏̆́̅͝ḍ̸͉̝̾͒̿͘e̸̙̞̜̒̀̒̆̈́͊ͅͅf̸̨̱̻͕̉g̶̱̹̝͠h̵̥̳̜̻͙́͘ȉ̴̺͍̭̻͈̑ͅj̷̢̢̛̻͚͈̫̪͍̙͚̍͆̓͑̽̓ķ̴̢̛̳̦̂̂͊̅ḷ̸̰͋̆̿̇̕̕͝m̵̢̡̼͔̮̬̖̖̘͑͂̋̊̇͗̋͊̎n̵̬̙̠̝̞̖͈̟̲̓́̓̄̐̒͆͘͠͠ͅọ̷͙̪̜̈́̐̽͂̆̂͝͠p̸̘̼̼̫̫͉̯͒͒̏̍͗̓̆̄q̷͍̟̥̯͕̪͇͐̊͜r̵̢͚̱̟̙̻͕̙͍͙̿͊̎́͝ş̸͖̻̳̰̠͕̜͕͇͒̉̂͂t̵̨̟̦̯͚̰͈͙̐́̈́̀͘͜ṳ̵̡̣̠͔̿͗v̷̡͇͎͈̝̻̟̥͇̾̌̽̈́̏̂̆̚͠ẅ̷̹̺̤̞̣͙̣̥̭́͂͆͒ͅx̴̩̫̱̮̭̟͈͚͛̾́̐͛̕͝ͅẙ̸̧̮͇͇̗̟́͊͂̀̉̚ͅz̸̨͈̠̩̐͒̉̿̈̚͝Ḁ̴̜͔̈́̍̓̀B̶͖̠͕͎̮̹̞̜̪͔͑͑̔͊͠C̴̨̨͖̞͕̰͚̫̻͗͗͆͠͝D̴̗͝E̵̙͔̥̯͎̪͚͌̚F̶̢̪̜̰̟̳͓͎͎̋͌̋̊̈́̕͠G̶̗̙̲̹͕̬͖̠͆̅͝ͅH̶̙̥͕͍̀̍̈̐̉͂͛͂Ĭ̸̧̯̽̓J̸̹̣̽̌̀̆͑͋͝͝Ķ̴̛̟́͗̚͘͝L̷̖͕̦̦͎̼̗͉͈͔̐Ḿ̷͈̳̘̳̝̉̍̌͑͝N̴̯̞̐̒̄̐͒̌̇̚͝͝Ǫ̶̛̖͈̱̘̖̃̀̾̈́͝͝͝P̴̧̭̥̘̘͎͚̌͋̂̈́͋̒̏͂͜Q̷̟̰̑͌͘R̸̫̻̱̦̎̑̐S̷̨̡͇͖̥̺̿̌̔͘T̶̙͓̭̰͉̏̒͝Ū̸̪̗̠̘̰̣̞͍̱͂̑͌̽̽̚̚V̴̨̥̳̭̪̰̙̞̇W̶̯̲̭̹̪̭͌̎͂̅̑̈́̚X̷̨͎̬͖̼̹̗̀͗̈́͋͜͝Y̷͔͇̻̊̍͒̋͒̅̒͝Z̸̧̯̖̓̍͊̆̐̿͊',
          //830 'a̾b̾c̾d̾e̾f̾g̾h̾i̾j̾k̾l̾m̾n̾o̾p̾q̾r̾s̾t̾u̾v̾w̾x̾y̾z̾A̾B̾C̾D̾E̾F̾G̾H̾I̾J̾K̾L̾M̾N̾O̾P̾Q̾R̾S̾T̾U̾V̾W̾X̾Y̾Z̾',
          // 846 'a͎b͎c͎d͎e͎f͎g͎h͎i͎j͎k͎l͎m͎n͎o͎p͎q͎r͎s͎t͎u͎v͎w͎x͎y͎z͎A͎B͎C͎D͎E͎F͎G͎H͎I͎J͎K͎L͎M͎N͎O͎P͎Q͎R͎S͎T͎U͎V͎W͎X͎Y͎Z͎',
          // 829 'a͓̽b͓̽c͓̽d͓̽e͓̽f͓̽g͓̽h͓̽i͓̽j͓̽k͓̽l͓̽m͓̽n͓̽o͓̽p͓̽q͓̽r͓̽s͓̽t͓̽u͓̽v͓̽w͓̽x͓̽y͓̽z͓̽A͓̽B͓̽C͓̽D͓̽E͓̽F͓̽G͓̽H͓̽I͓̽J͓̽K͓̽L͓̽M͓̽N͓̽O͓̽P͓̽Q͓̽R͓̽S͓̽T͓̽U͓̽V͓̽W͓̽X͓̽Y͓̽Z͓̽'
        ]

        $('#src').change(updateText).on("keyup input contextmenu", updateText);
        resetOutputHint();
        function resetOutputHint() {
          $("#out").html('<div id="demo">𝔜𝔬𝔲𝔯 𝔉𝔞𝔫𝔠𝔶 𝔗𝔢𝔵𝔱 ℑ𝔰 ℭ𝔬𝔪𝔦𝔫𝔤 𝔒𝔲𝔱 ℌ𝔢𝔯𝔢...</div>')
        }
        var lastRenderTime = new Date();
        var lastRenderText = '';
        var render_arr = [];
        function updateText() {
          var src_text = $('#src').val();
          if (src_text == '') {
            $('#out').empty();
            resetOutputHint();
            abortAllRender();
            return;
          }
          if (src_text == lastRenderText) {
            return;
          }
          // Create a new Render
          newRender();

          // Check if it's time to replace render
          if (new Date() - lastRenderTime < 599) {
            abortAllRender();
            newRender();
          }
        }
        function newRender() {
          addRenderLoading();
          render_arr.push(setTimeout(renderUpdate, 599));
        }
        function abortAllRender() {
          render_arr.forEach(function (timeOutId) {
            clearTimeout(timeOutId);
          })
          render_arr = [];
        }
        function addRenderLoading() {
          if ($('#renderLoading').length == 0) {
            var svg = '<svg version="1.1" id="L9" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="-18 40 100 100" enable-background="new 0 0 0 0" xml:space="preserve"><rect x="20" y="50" width="4" height="10" fill="#fff" transform="translate(0 13.1135)"><animateTransform attributeType="xml" attributeName="transform" type="translate" values="0 0; 0 20; 0 0" begin="0" dur="0.6s" repeatCount="indefinite"></animateTransform></rect><rect x="30" y="50" width="4" height="10" fill="#fff" transform="translate(0 13.5532)"><animateTransform attributeType="xml" attributeName="transform" type="translate" values="0 0; 0 20; 0 0" begin="0.2s" dur="0.6s" repeatCount="indefinite"></animateTransform></rect><rect x="40" y="50" width="4" height="10" fill="#fff" transform="translate(0 0.219867)"><animateTransform attributeType="xml" attributeName="transform" type="translate" values="0 0; 0 20; 0 0" begin="0.4s" dur="0.6s" repeatCount="indefinite"></animateTransform></rect></svg>';
            $('body').append('<div id="renderLoading">' + svg + '</div>');
          };
          $('#renderLoading').css('opacity', .2);
          $('#out textarea').addClass('working');
          $('#out textarea').css('background-image', 'none')
        }
        // TODO !!FIXE SHIS
        function removeRenderLoading() {
          $('#renderLoading').css('opacity', 0);
          $('#out textarea').removeClass('working');
          $('#out textarea').each(function () {
            var $this = $(this);
            setupCopyReadyTextarea($this);
          })
        }
        function svgBgBuilder($element, text, color, opacity, width, height) {
          if (!width || !height) {
            width = $element.width();
            height = $element.height();
          }
          var bg_str = 'url("data:image/svg+xml;utf8,<svg xmlns='
            + // starting double quotes
            "'http://www.w3.org/2000/svg' version='1.1' height='" + height + "px' width='" + width + "px'><text x='" + (width / 1) + "' y='" + (height / 2) + "' alignment-baseline='middle' text-anchor='end' fill-opacity='" + opacity + "' fill='%23" + color + "' font-size='30' font-style='italic' font-weight='bold' font-family='Arial, Helvetica, sans-serif'>" + text + "</text></svg>" + '")';
          $element.css('background-image', bg_str);
        }
        function renderUpdate() {
          abortAllRender();
          var src_text = $('#src').val();
          $('#out').empty();
          // Ordinary Replace
          for (var i = 0; i < fonts_arr.length; i++) {
            var fancy_font = fonts_arr[i];
            var textarea_id = 'fancy_txt' + i;
            var existed = $('#' + textarea_id).length > 0;
            var $textarea = existed ? $('#' + textarea_id) : $('<div class="copy-area" id="' + textarea_id + '"></div>');
            var $child = $('<div class="text-wrapper copy-wrapper"><span class="copy">Click To Copy</span></div>').append($textarea);
            $textarea.text(replaceString(src_text, fancy_font));
            if (!existed) $('#out').append($child);
            auto_grow($textarea[0]);
          }
          // Hyper Replace
          var hyper_arr = [1161, 822, 818, 823, 819, 830, 846, 829];
          hyper_arr.forEach(function (weirdo_value, i) {
            var textarea_id = 'hyper_txt' + i;
            var existed = $('#' + textarea_id).length > 0;
            var $textarea = existed ? $('#' + textarea_id) : $('<div class="copy-area" id="' + textarea_id + '"></div>');
            var $child = $('<div class="text-wrapper copy-wrapper"><span class="copy">Click To Copy</span></div>').append($textarea);
            $textarea.text(replaceHyperString(src_text, weirdo_value));
            if (!existed) $('#out').append($child);
            auto_grow($textarea[0]);
          })

          // Update lastRenderTime
          lastRenderTime = new Date();
          lastRenderText = src_text;
          removeRenderLoading();
        }
        function auto_grow(element) {
          //  element.style.height = "5px";
          //  element.style.height = (element.scrollHeight) + "px";
        }
        $('#src').bind('keyup input contextmenu', function () {
          auto_grow($(this)[0]);
        });

        function replaceString(input_text, fancy_text) {
          if (!input_text) { return '' }
          var source_split_arr = Array.from(TEXT_SOURCE);
          var fancy_split_arr = Array.from(fancy_text);
          var output_text = input_text;
          for (var i = 0; i < source_split_arr.length; i++) {
            var normal_char = source_split_arr[i];
            var fancy_char = fancy_split_arr[i];
            output_text = output_text.split(normal_char).join(fancy_char);
          }
          return output_text;
        }
        function replaceHyperString(input_text, weirdo) {
          var source_split_arr = Array.from(input_text);
          var output_text = '';
          for (var i = 0; i < source_split_arr.length; i++) {
            var normal_char = source_split_arr[i];
            output_text += normal_char + String.fromCharCode(weirdo);
          }
          return output_text;
        }
        function replaceHTMLTag(selector, font_id) {
          var html_text = $(selector).html();
          var new_html_text = replaceByFontsId(html_text, font_id);
          $(selector).html(new_html_text);
        }
        function replaceHyperHTMLTag(selector, weirdo_value) {
          var html_text = $(selector).html();
          var new_html_text = replaceHyperString(html_text, weirdo_value);
          $(selector).html(new_html_text);
        }
        function replaceByFontsId(input_text, font_id) {
          return replaceString(input_text, fonts_arr[font_id]);
        }
        // Setup Fonts
        replaceHTMLTag('h1 a', 0);
        replaceHTMLTag('h2', 6);
        replaceHTMLTag('h3', 4); // How does this work
        replaceHTMLTag('#u1', 2);
        replaceHTMLTag('#u2', 3);
        replaceHTMLTag('#u3', 4);
        replaceHyperHTMLTag('#w1', 1161);
        replaceHyperHTMLTag('#w2', 818);
        replaceHyperHTMLTag('#w3', 810);
        replaceHTMLTag('title', 5);

        aloadJS('https://www.googletagmanager.com/gtag/js?id=UA-25873290-7', function () {
          window.dataLayer = window.dataLayer || [];
          function gtag() { dataLayer.push(arguments); }
          gtag('js', new Date());
          gtag('config', 'UA-25873290-7');
        });
        $('#out').on('click', '.copy-area', function () {
          const copyToClipboard = str => {
            const el = document.createElement('textarea');
            el.value = str;
            document.body.appendChild(el);
            el.select();
            document.execCommand('copy');
            document.body.removeChild(el);
          };
          copyToClipboard($(this).text());

          var $this = $(this);
          var $others = $('#out textarea').not($this);
          var span = $this.parent().find('span');
          span.text('Copied!');
          setTimeout(() => {
            span.text('Click To Copy');
          }, 1000)
          // 
          // if($this.attr('id') == 'demo') return;
          // var promise = clipboard.writeText($this.val());
          // promise.then(resolved, rejected);
          // function resolved(val) {
          //   setupCopyDoneTextarea($this);
          //   var $others = $('#out textarea').not($this);
          //   setupCopyReadyTextarea($others);
          // }
          // function rejected(val) {
          //   console.log('bad', val);
          // }
          //- trycopy().then(alert); // 1
        })


        // Sticky TextArea
        $(window).scroll(function () {
          var _scrolltop = $('#out').offset().top;
          var scrollTop = $(this).scrollTop();
          if (scrollTop >= _scrolltop) {
            $("#input").addClass('fixedTop');
          } else {
            $('#input').removeClass('fixedTop');
          }
        })

        // Navbar toggle
        $('.navbar-toggler').click(function () {
          $(this).toggleClass('collapsed')
          if (!$(this).hasClass('collapsed')) {
            // Check if the Sidebar is open
            if ($('.bd-sidebar').hasClass('show')) {
              $('.bd-sidebar').removeClass('show')
            }
            // Toggle navigation
            $('#bdNavbar').addClass('show');
          }
          else {
            $('#bdNavbar').removeClass('show');

          }
        })

        function toggleDarkMode() {
          // darkMode
          $('.darkMode').click(function () {
            $(this).toggleClass('active');
            $(this).attr('title', "Use dark mode");
            var cl = $("body").toggleClass("dark");
            if ($("body").hasClass('dark')) {
              // Whenever the user explicitly chooses dark mode
              localStorage.theme = 'dark';
            } else {
              //     // Whenever the user explicitly chooses light mode
              localStorage.theme = 'light';
            }
          })
          changeStorageData();
          function changeStorageData() {
            if (
              localStorage.theme === 'dark'
              || (!('theme' in localStorage)
                && window.matchMedia('(prefers-color-scheme: dark)').matches)
            ) {
              $("body").addClass('dark');
              $('.darkMode').addClass('active');
            } else {
              $("body").removeClass('dark');
            }
          };
        }


        !function () {
          aloadJS("//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5d4ef23adc8f9863", {});
        }()
        //- if(window.matchMedia("(any-pointer: coarse)").matches) {
        //-   $('html, body').addClass('touch_fix');
        //- }


        /* For Chrome extension
          $("*").contents().each(function() {
          if(this.nodeType == 3)
            this.nodeValue = this.nodeValue.replace("a", "AAAAA");
          });
        */
      }
     